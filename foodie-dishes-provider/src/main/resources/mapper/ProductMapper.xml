<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lanke.foodie.dao.ProductDao">
    <select id="checkProductById" resultType="int">
        select
        id
        from
        product
        where
        product_name = #{productName}

    </select>
    <delete id="delProductTypeById"  parameterType = "String">
        delete
        from
        product_type
        where
        id in
        ${ids}
    </delete>

    <select id="getIfProductByTypeIds" resultType="int">
        select
        count(*)
        from
        product
        where
        product_type_id
        in
        ${ids}

    </select>



    <insert id="addShopVoucher">
        insert
        into
        voucher
        (
        shop_id,
        money,
        start_date,
        dead_line,
        city,
        create_time
        )
        values
        (
        #{shopId},
        #{money},
        #{startDate},
        #{deadLine},
        #{city},
        #{createTime}
        )
    </insert>
    <select id="getVoucherByCity" resultType="com.lanke.foodie.userdto.VoucherDto">
        select
        voucher.*,shop_name
        from
        voucher,shop
        where
        city = #{city} and voucher.shop_id = shop.id order by money desc
    </select>
    <select id="getVoucherForUserByUserId" resultType="com.lanke.foodie.userdto.VoucherDto">
        SELECT
        voucherfor_user.*,shop_name
        FROM
        voucherfor_user,shop
        WHERE
        voucherfor_user.shop_id = shop.id  AND voucherfor_user.user_id =#{userId} AND  had_use = 0 ORDER BY voucherfor_user.id desc
    </select>
    <select id="getVoucherById" resultType="Voucher">
        select
        *
        from
        voucher
        where
        shop_id = #{shopId}
    </select>
    <select id="checkVoucher" resultType="int">
        select
        count(*)
        from
        voucher
        where
        shop_id = #{shopId}
    </select>
    <delete id="delVoucherById"  parameterType = "int">
        delete
        from
        voucher
        where
        shop_id = #{shopId}
    </delete>
    <update id="updateVoucher" >
        update
        voucher
        set
        money = #{money},
        start_date = #{startDate},
        dead_line = #{deadLine},
        city = #{city}
        where
        shop_id = #{shopId}
    </update>






    <insert id="addVoucherForShop" parameterType="java.util.List">
        insert
        into
        voucherfor_shop
        (
        shop_id,
        money,
        start_date,
        dead_line,
        create_time
        )
        values
        <foreach collection ="list" item="voucher" separator =",">
            (
            #{voucher.shopId},
            #{voucher.money},
            #{voucher.startDate},
            #{voucher.deadLine},
            #{voucher.createTime}
            )
        </foreach >

    </insert>
    <select id="getVoucherForShopById" resultType="VoucherForShop">
        select
        *
        from
        voucherfor_shop
        where
        shop_id = #{shopId}
    </select>
    <select id="getVoucherForUserById" resultType="com.lanke.foodie.userdto.VoucherForUserDto">
        select
        *
        from
        voucherfor_user
        where
        shop_id = #{shopId} and user_id = #{userId} and had_use = 0
    </select>
    <delete id="delVoucherForUserById"  parameterType = "int">
        update
        voucherfor_user
        set had_use = 1
        where
        id = #{id}
    </delete>
    <select id="checkProductType" resultType="int">
        select
        count(*)
        from
        product_type
        where
        type_name=#{typeName}
    </select>
    <insert id="addProductType">
        insert
        into
        product_type
        (
        type_name,
        create_time
        )
        values
        (
        #{typeName},
        #{createTime}
        )
    </insert>
    <select id="findAllProductType" resultType="com.lanke.foodie.entity.ProductType" >
        select
        id,type_name
        from
        product_type
    </select>


    <insert id="addMoneyOff">
        insert
        into
        money_off
        (
        full_num,
        minus_num,
        create_time
        )
        values
        (
        #{fullNum},
        #{minusNum},
        #{createTime}
        )
    </insert>
    <delete id="delMoneyOffById"  parameterType = "String">
        delete
        from
        money_off
        where
        id in
        ${ids}
    </delete>
    <select id="findAllMoneyOff" resultType="com.lanke.foodie.entity.MoneyOff" >
        select
        *
        from
        money_off
    </select>
    <select id="findMoneyOffByIds" resultType="com.lanke.foodie.entity.MoneyOff" >
        select
         full_num,minus_num
        from
        money_off
        where
        id in
        ${ids}
    </select>
    <select id="getIfMoneyOffInProduct" resultType="int">
        select
        count(*)
        from
        product
        where
        money_off_ids
        in
        ${ids}

    </select>
    <select id="checkMoneyOff" resultType="int">
        select
        count(*)
        from
        money_off
        where
        full_num = #{fullNum} and minus_num = #{minusNum}
    </select>


    <insert id="addProduct">
        insert
        into
        product
        (
        product_name,
        product_intro,
        product_type_id,
        product_type_name,
        product_sales,
        money_off_ids,
        price_for_shop,
        price_for_user,
        photo_url,
        create_time
        )
        values
        (
        #{productName},
        #{productIntro},
        #{productTypeId},
        #{productTypeName},
        #{productSales},
        #{moneyOffIds},
        #{priceForShop},
        #{priceForUser},
        #{photoUrl},
        #{createTime}
        )
    </insert>
    <select id="checkProduct" resultType="int">
        select
        count(*)
        from
        product
        where
        product_name = #{productName}
    </select>
    <delete id="delProductById"  parameterType = "String">
        delete
        from
        product
        where
        id in
        ${ids}
    </delete>
    <select id="getProductById" resultType="Product">
        select
        *
        from
        product
        where
        id = #{id}
    </select>
    <select id="getProductNameById" resultType="String">
        select
        product_name
        from
        product
        where
        id = #{id}
    </select>
    <select id="findAllProduct" resultType="com.lanke.foodie.dto.ProductDto">
        SELECT id,product_name,product_type_name,product_sales,price_for_shop,price_for_user,photo_url FROM product
        WHERE product_type_name like '%${value}%' or product_name like '%${value}%'
    </select>
    <select id="getProductNamesByValue" resultType="String">
        SELECT product_name FROM product
        WHERE product_type_name like '%${value}%' or product_name like '%${value}%' limit 20
    </select>

    <select id="findAllProductWithMoneyOff" resultType="com.lanke.foodie.dto.ProductWithMoneyOffDto">
         SELECT product.id,product_name,product_type_name,product_sales,price_for_shop,price_for_user,photo_url,money_off_ids,GROUP_CONCAT( money_off.full_num) AS full_num,GROUP_CONCAT( money_off.minus_num ) AS minus_num
         FROM product  LEFT JOIN money_off ON  FIND_IN_SET (money_off.id,product.money_off_ids)
         where product_name  like '%${value}%' or product_type_name  like '%${value}%'  GROUP BY product.id
    </select>
    <select id="findAllProductWithMoneyOffByType" resultType="com.lanke.foodie.dto.ProductWithMoneyOffDto">
         SELECT product.id,product_name,product_type_name,product_sales,price_for_shop,price_for_user,photo_url,money_off_ids,GROUP_CONCAT( money_off.full_num) AS full_num,GROUP_CONCAT( money_off.minus_num ) AS minus_num
         FROM product LEFT JOIN money_off ON  FIND_IN_SET (money_off.id,product.money_off_ids)
         where product_type_name  = #{productType} GROUP BY product.id
    </select>
    <update id="updateProduct" >
        update
        product
        set
        product_name = #{productName},
        product_intro = #{productIntro},
        product_type_Id = #{productTypeId},
        product_type_name = #{productTypeName},
        money_off_ids = #{moneyOffIds},
        price_for_shop = #{priceForShop},
        price_for_user = #{priceForUser},
        photo_url = #{photoUrl},
        create_time = #{createTime}
        where
        id = #{id}
    </update>

    <insert id="addShopVoucherForUser">
        insert
        into
        voucherfor_user
        (
        shop_id,
        user_id,
        voucher_id,
        money,
        start_date,
        dead_line,
        had_use,
        create_time
        )
        values
        (
        #{shopId},
        #{userId},
        #{voucherId},
        #{money},
        #{startDate},
        #{deadLine},
        #{hadUse},
        #{createTime}
        )
    </insert>
    <select id="checkVoucherForUser" resultType="int">
        select
        count(*)
        from
        voucherfor_user
        where
        shop_id = #{shopId} and user_id = #{userId} and voucher_id = #{voucherId}
    </select>
    <!--<delete id="delHotSearchForProductById"  parameterType = "String">-->
        <!--DELETE-->
        <!--FROM-->
        <!--hotsearchfor_product-->
        <!--WHERE-->
        <!--id IN-->
        <!--${ids}-->
    <!--</delete>-->

    <!--<select id="checkHotSearchForProduct" resultType="int">-->
        <!--SELECT-->
        <!--COUNT(*)-->
        <!--FROM-->
        <!--hotsearchfor_product-->
        <!--WHERE-->
        <!--search_name=#{searchName}-->
    <!--</select>-->
    <!--<insert id="addHotSearchForProduct">-->
        <!--INSERT-->
        <!--INTO-->
        <!--hotsearchfor_product-->
        <!--(-->
        <!--search_name,-->
        <!--create_time-->
        <!--)-->
        <!--VALUES-->
        <!--(-->
        <!--#{searchName},-->
        <!--#{createTime}-->
        <!--)-->
    <!--</insert>-->
    <!--<select id="findAllHotSearchForProduct" resultType="com.lanke.foodie.entity.HotSearchForProduct" >-->
        <!--SELECT-->
        <!--id,search_name-->
        <!--FROM-->
        <!--hotsearchfor_product-->
    <!--</select>-->
    <!--<select id="findAllHotSearchForProduct" resultType="com.lanke.foodie.entity.HotSearchForProduct" >-->
        <!--SELECT-->
        <!--id,search_name-->
        <!--FROM-->
        <!--hotsearchfor_product limit 10-->
    <!--</select>-->
    <select id="getProductDetailForUser" resultType="com.lanke.foodie.userdto.ProductUserDto">
        select
        *
        from
        product
        where
        id = #{id}
    </select>
</mapper>